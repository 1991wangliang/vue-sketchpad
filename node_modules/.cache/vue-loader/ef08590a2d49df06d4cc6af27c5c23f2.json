{"remainingRequest":"/Users/hj/Desktop/leaning-resource/vue-sketchpad/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hj/Desktop/leaning-resource/vue-sketchpad/src/components/Sketchpad.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hj/Desktop/leaning-resource/vue-sketchpad/src/components/Sketchpad.vue","mtime":1620712492999},{"path":"/Users/hj/Desktop/leaning-resource/vue-sketchpad/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hj/Desktop/leaning-resource/vue-sketchpad/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/hj/Desktop/leaning-resource/vue-sketchpad/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hj/Desktop/leaning-resource/vue-sketchpad/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Sketchpad.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAofile":"Sketchpad.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"wraper\" ref=\"wraper\">\n    <div class=\"canvas-wraper\">\n      <canvas id=\"canvas\" ref=\"canvas\"></canvas>\n    </div>\n    <div class=\"controlPanel\">\n      <div \n        :class=\"[initIdx == idx ? 'contro-item active' : 'contro-item']\" \n        v-for=\"(item,idx) in toolsArr\" :key=\"idx\"\n        @click=\"handleTools(item, idx)\">\n        <i :class=\"'iconfont' + item.icon\"></i>\n      </div>\n    </div>\n    <div class=\"download\">\n      <button type=\"button\" :disabled=\"done\" @click=\"downLoadImage\">转换为base64并预览</button>\n      <img :src=\"imageBase64\" v-show=\"imageBase64!=''\" alt=\"\">\n    </div>\n  </div>\n</template>\n<script>\n  import { fabric } from 'fabric'\n  export default{\n    data() {\n      return{\n        currentTool: '',\n        done: false,\n        fabricObj: null,\n        initIdx: 0,\n        toolsArr: [\n          {\n            name: 'pencil',\n            icon: ' icon-pencil'\n          },\n          {\n            name: 'line',\n            icon: ' icon-line'\n          },\n          {\n            name: 'arrow',\n            icon: ' icon-arrow'\n          },\n          {\n            name: 'dashedline',\n            icon: ' icon-xuxian'\n          },\n          {\n            name: 'text',\n            icon: ' icon-ziti'\n          },\n          {\n            name: 'rectangle',\n            icon: ' icon-juxing'\n          },\n          {\n            name: 'circle',\n            icon: ' icon-yuanxing'\n          },\n          {\n            name: 'ellipse',\n            icon: ' icon-tuoyuanxing'\n          },\n          {\n            name: 'equilateral', //三角形\n            icon: ' icon-sanjiaoxing'\n          },\n          {\n            name: 'remove',\n            icon: ' icon-remove'\n          },\n          {\n            name: 'undo',\n            icon: ' icon-huitui'\n          },\n          {\n            name: 'redo',\n            icon: ' icon-xiangqian'\n          },\n          {\n            name: 'reset',\n            icon: ' icon-reset'\n          },\n        ],\n        mouseFrom:{},\n        mouseTo:{},\n        moveCount: 1,\n        doDrawing: false,\n        fabricHistoryJson: [],\n        mods: 0,\n        drawingObject: null, //绘制对象\n        drawColor: '#E34F51',\n        drawWidth: 2,\n        imageBase64: '',\n        zoom: window.zoom ? window.zoom : 1,\n      }\n    },\n    mounted() {\n      //初始化canvas \n      this.initCanvas()\n    },\n    computed:{\n      canvasWidth() {\n        return window.innerWidth\n      }\n    },\n    methods:{\n      initCanvas() {\n        this.fabricObj = new fabric.Canvas('canvas',{\n          isDrawingMode: true,\n          selectable: false,\n          selection: false,\n          devicePixelRatio:true, //Retina 高清屏 屏幕支持\n        })\n        this.fabricObj.freeDrawingBrush.color = '#E34F51'\n        this.fabricObj.freeDrawingBrush.width = 2\n        this.fabricObj.setWidth(this.canvasWidth)\n        this.fabricObj.setHeight(500)\n        this.fabricObj.add(\n          new fabric.Rect({ top: 100, left: 100, width: 50, height: 50, fill: '#f55' }),\n          new fabric.Circle({ top: 140, left: 230, radius: 75, fill: 'green' }),\n          new fabric.Triangle({ top: 300, left: 210, width: 100, height: 100, fill: 'blue' }),\n        )\n        //绑定画板事件\n        this.fabricObjAddEvent()\n      },\n      //时间监听\n      fabricObjAddEvent() {\n        this.fabricObj.on({\n          'mouse:down': (o)=> {\n            this.mouseFrom.x = o.pointer.x;\n            this.mouseFrom.y = o.pointer.y;\n            this.doDrawing = true;\n            if(this.currentTool=='text') {\n              this.drawText()\n            }        \n          },\n          'mouse:up': (o)=> {\n            this.mouseTo.x = o.pointer.x;\n            this.mouseTo.y = o.pointer.y;\n            this.drawingObject = null;\n            this.moveCount = 1;\n            this.doDrawing = false;\n            this.updateModifications(true);\n          },\n          'mouse:move': (o)=> {\n            if (this.moveCount % 2 && !this.doDrawing) {\n              //减少绘制频率\n              return\n            }\n            this.moveCount++;\n            this.mouseTo.x = o.pointer.x;\n            this.mouseTo.y = o.pointer.y;\n            this.drawing();\n          },\n          //对象移动时间\n          'object:moving': (e)=> {\n            e.target.opacity = 0.5;\n          },\n          //增加对象\n          'object:added': ()=>{\n            // debugger\n          },\n          'object:modified':(e)=> {\n            e.target.opacity = 1;\n            // let object = e.target;\n            this.updateModifications(true)\n          },\n          'selection:created': (e)=>{\n            if (e.target._objects) {\n              //多选删除\n              var etCount = e.target._objects.length;\n              for (var etindex = 0; etindex < etCount; etindex++) {\n                this.fabricObj.remove(e.target._objects[etindex]);\n              }\n            } else {\n              //单选删除\n              this.fabricObj.remove(e.target);\n            }\n            this.fabricObj.discardActiveObject(); //清楚选中框\n            this.updateModifications(true) \n          },\n        });\n      },\n      //储存历史记录\n      updateModifications(savehistory) {\n        if(savehistory==true) {\n          this.fabricHistoryJson.push(JSON.stringify(this.fabricObj))\n        }\n      },\n      //canvas 历史后退\n      undo() {\n        let state = this.fabricHistoryJson\n        if(this.mods < state.length) {\n          this.fabricObj.clear().renderAll();\n          this.fabricObj.loadFromJSON(state[state.length - 1 - this.mods - 1]);\n          this.fabricObj.renderAll();\n          this.mods += 1;\n        }\n      },\n      //前进\n      redo() {\n        let state = this.fabricHistoryJson\n        if (this.mods > 0) {\n          this.fabricObj.clear().renderAll();\n          this.fabricObj.loadFromJSON(state[state.length - 1 - this.mods + 1]);\n          this.fabricObj.renderAll();\n          this.mods -= 1;\n        }\n      },\n      transformMouse(mouseX, mouseY) {\n        return { x: mouseX / this.zoom, y: mouseY / this.zoom };\n      },\n      resetObj() {\n        this.fabricObj.selectable = false\n        this.fabricObj.selection = false\n        this.fabricObj.skipTargetFind = true\n        //清除文字对象\n        if(this.textboxObj) {\n          this.textboxObj.exitEditing();\n          this.textboxObj = null;\n        }\n      },\n      handleTools(tools, idx) {\n        this.initIdx = idx;\n        this.currentTool = tools.name;\n        this.fabricObj.isDrawingMode = false;\n        this.resetObj()\n        switch(tools.name) {\n          case 'pencil':\n            this.fabricObj.isDrawingMode = true;\n            break;\n          case 'remove':\n            this.fabricObj.selection = true\n            this.fabricObj.skipTargetFind = false\n            this.fabricObj.selectable = true\n            break;\n          case 'reset':\n            this.fabricObj.clear();\n            break;\n          case 'redo':\n            this.redo();\n            break;\n          case 'undo':\n            this.undo();\n            break;     \n          default:\n            break; \n        }\n      },\n      //绘制文字对象\n      drawText() {\n        this.textboxObj = new fabric.Textbox(\" \", {\n          left: this.mouseFrom.x,\n          top: this.mouseFrom.y,\n          width: 220,\n          fontSize: 18,\n          fill: this.drawColor,\n          hasControls: true\n        });\n        this.fabricObj.add(this.textboxObj);\n        this.textboxObj.enterEditing();\n        this.textboxObj.hiddenTextarea.focus();\n        this.updateModifications(true)\n      },\n      drawing() {\n        if(this.drawingObject) {\n          this.fabricObj.remove(this.drawingObject)\n        }\n        let fabricObject = null\n        switch (this.currentTool) {\n          case 'pencil':\n            this.fabricObj.isDrawingMode = true\n            break;\n          case 'line':\n            fabricObject = new fabric.Line([this.mouseFrom.x, this.mouseFrom.y, this.mouseTo.x, this.mouseTo.y],{\n              stroke: this.drawColor,\n              strokeWidth: this.drawWidth\n            }) \n            break;\n          case 'arrow':\n            fabricObject = new fabric.Path(this.drawArrow(this.mouseFrom.x, this.mouseFrom.y, this.mouseTo.x, this.mouseTo.y, 15.5, 15.5), {\n              stroke: this.drawColor,\n              fill: \"rgba(255,255,255,0)\",\n              strokeWidth: this.drawWidth\n            });\n            break;\n          case 'dashedline': \n            // doshed line\n            fabricObject = this.drawDoshedLine()\n            break;\n          case 'rectangle': \n            // 矩形\n            fabricObject = this.drawRectangle()\n            break;\n          case \"circle\": //正圆\n            fabricObject = this.drawCircle()\n            break;\n          case \"ellipse\": \n            // 椭圆\n            fabricObject = this.drawEllipse()\n            break;\n          case \"equilateral\": //等边三角形\n            fabricObject = this.drawTriangle()\n            break;\n          case 'remove':\n            break;   \n          default:\n            // statements_def'\n            break;\n        }\n        if(fabricObject) {\n          this.$nextTick(() => {\n            this.fabricObj.add(fabricObject)\n            this.drawingObject = fabricObject\n          })\n        }\n      },\n      // dashed line\n      drawDoshedLine() {\n        return new fabric.Line([this.mouseFrom.x, this.mouseFrom.y, this.mouseTo.x, this.mouseTo.y],{\n          strokeDashArray: [10, 3],\n          stroke: this.drawColor,\n          strokeWidth: this.drawWidth\n        })\n      },\n      // circle\n      drawCircle() {\n        let radius = Math.sqrt((this.mouseTo.x - this.mouseFrom.x) * (this.mouseTo.x - this.mouseFrom.x) + (this.mouseTo.y - this.mouseFrom.y) * (this.mouseTo.y - this.mouseFrom.y)) / 2;\n         return new fabric.Circle({\n          left: this.mouseFrom.x,\n          top: this.mouseFrom.y,\n          stroke: this.drawColor,\n          fill: \"rgba(255, 255, 255, 0)\",\n          radius: radius,\n          strokeWidth: this.drawWidth\n        });\n      },\n      // triangle\n      drawTriangle() {\n        let height = this.mouseTo.y - this.mouseFrom.y\n        return new fabric.Triangle({\n          top: this.mouseFrom.y,\n          left: this.mouseFrom.x,\n          width: Math.sqrt(Math.pow(height, 2) + Math.pow(height / 2.0, 2)),\n          height: height,\n          stroke: this.drawColor,\n          strokeWidth: this.drawWidth,\n          fill: \"rgba(255,255,255,0)\"\n        });\n      },\n      // ellipse\n      drawEllipse() {\n        let left = this.mouseFrom.x\n        let top = this.mouseFrom.y\n        // let ellipse = Math.sqrt((this.mouseTo.x - left) * (this.mouseTo.x - left) + (this.mouseTo.y - top) * (this.mouseTo.y - top)) / 2;\n        return new fabric.Ellipse({\n          left: left,\n          top: top,\n          stroke: this.drawColor,\n          fill: \"rgba(255, 255, 255, 0)\",\n          originX: \"center\",\n          originY: \"center\",\n          rx: Math.abs(left - this.mouseTo.x),\n          ry: Math.abs(top - this.mouseTo.y),\n          strokeWidth: this.drawWidth\n        });\n      },\n      // rectangle\n      drawRectangle() {\n        return new fabric.Rect({\n          left: this.mouseFrom.x,\n          top: this.mouseFrom.y,\n          width: this.mouseTo.x - this.mouseFrom.x,\n          height: this.mouseTo.y - this.mouseFrom.y,\n          fill: \"rgba(255, 255, 255, 0)\",\n          stroke: this.drawColor,\n          strokeWidth: this.drawWidth\n        });\n      },\n      //书写箭头的方法\n      drawArrow(fromX, fromY, toX, toY, theta, headlen) {\n        theta = typeof theta != \"undefined\" ? theta : 30;\n        headlen = typeof theta != \"undefined\" ? headlen : 10;\n        // 计算各角度和对应的P2,P3坐标\n        let angle = Math.atan2(fromY - toY, fromX - toX) * 180 / Math.PI,\n          angle1 = (angle + theta) * Math.PI / 180,\n          angle2 = (angle - theta) * Math.PI / 180,\n          topX = headlen * Math.cos(angle1),\n          topY = headlen * Math.sin(angle1),\n          botX = headlen * Math.cos(angle2),\n          botY = headlen * Math.sin(angle2);\n        let arrowX = fromX - topX,\n          arrowY = fromY - topY;\n        let path = \" M \" + fromX + \" \" + fromY;\n        path += \" L \" + toX + \" \" + toY;\n        arrowX = toX + topX;\n        arrowY = toY + topY;\n        path += \" M \" + arrowX + \" \" + arrowY;\n        path += \" L \" + toX + \" \" + toY;\n        arrowX = toX + botX;\n        arrowY = toY + botY;\n        path += \" L \" + arrowX + \" \" + arrowY;\n        return path;\n      },\n      downLoadImage() {\n        this.done = true\n        //生成双倍像素比的图片\n        let base64URl = this.fabricObj.toDataURL({\n          formart: 'png',\n          multiplier: 2\n        })\n        this.imageBase64 = base64URl\n        this.done = false\n      },\n    },\n  }\n</script>\n\n<style lang=\"scss\" scoped>\n  .wraper{\n    position: relative;\n    width: 100%;\n    height: 100%;\n    .canvas-wraper{\n      height: 50%;\n      width: 100%;\n      margin-bottom: 10px;\n      overflow: hidden;\n    }\n    .controlPanel{\n      width: 100%;\n      height: 62px;\n      background: #ddd;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      margin-bottom: 15px;\n      .contro-item{\n        flex-basis: 100px;\n        border-right: 1px solid #dad7d9;\n        text-align: center;\n        cursor: pointer;\n        background: #fefefe;\n        i{\n          font-size: 38px;\n          line-height: 62px;\n        }\n        &.active{\n          background: #e34f51;\n          color: #fff;\n          border-radius: 3px;\n          i{\n            font-size: 42px;\n          }\n        }\n      }\n    }\n    .download{\n      img{\n        width: 100%;\n      }\n    }\n  }\n</style>"]}]}